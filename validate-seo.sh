#!/bin/bash

# Script de validation SEO post-d√©ploiement pour Hostinger
# √Ä ex√©cuter apr√®s le d√©ploiement pour v√©rifier que tout est en ordre

echo "üîç Validation SEO post-d√©ploiement - melissacolin.ai"
echo "=================================================="

SITE_URL="https://melissacolin.ai"
LOCAL_DIST="./my-portfolio-dist"

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo ""
echo -e "${BLUE}üìã 1. V√©rification du contenu local (my-portfolio-dist)${NC}"

if [ ! -d "$LOCAL_DIST" ]; then
    echo -e "${RED}‚ùå Dossier my-portfolio-dist introuvable!${NC}"
    exit 1
fi

# V√©rification H1
h1_count=$(grep -c '<h1>' "$LOCAL_DIST/index.html" 2>/dev/null || echo "0")
if [ "$h1_count" -gt 0 ]; then
    echo -e "${GREEN}‚úÖ H1 heading pr√©sent ($h1_count trouv√©)${NC}"
    h1_content=$(grep -o '<h1>[^<]*</h1>' "$LOCAL_DIST/index.html" | head -1)
    echo -e "   üìù Contenu: ${h1_content}"
else
    echo -e "${RED}‚ùå CRITIQUE: Aucun H1 heading trouv√©!${NC}"
fi

# V√©rification structure headings
h2_count=$(grep -c '<h2>' "$LOCAL_DIST/index.html" 2>/dev/null || echo "0")
h3_count=$(grep -c '<h3>' "$LOCAL_DIST/index.html" 2>/dev/null || echo "0")
echo -e "${GREEN}‚úÖ Structure headings: H1($h1_count) H2($h2_count) H3($h3_count)${NC}"

# V√©rification meta description
if grep -q 'meta name="description"' "$LOCAL_DIST/index.html"; then
    echo -e "${GREEN}‚úÖ Meta description pr√©sente${NC}"
    desc=$(grep -o 'meta name="description" content="[^"]*"' "$LOCAL_DIST/index.html" | sed 's/meta name="description" content="//g' | sed 's/"$//g')
    echo -e "   üìù Description: ${desc:0:80}..."
else
    echo -e "${RED}‚ùå Meta description manquante${NC}"
fi

# V√©rification liens internes
internal_links=$(grep -c 'href="/' "$LOCAL_DIST/index.html" 2>/dev/null || echo "0")
echo -e "${GREEN}‚úÖ Liens internes: $internal_links${NC}"

# V√©rification liens externes
external_links=$(grep -c 'href="https://' "$LOCAL_DIST/index.html" 2>/dev/null || echo "0")
if [ "$external_links" -gt 0 ]; then
    echo -e "${GREEN}‚úÖ Liens externes: $external_links${NC}"
    echo -e "   üìù Liens vers:"
    grep -o 'href="https://[^"]*"' "$LOCAL_DIST/index.html" | sed 's/href="//g' | sed 's/"$//g' | head -5 | while read url; do
        echo -e "      - $url"
    done
else
    echo -e "${RED}‚ùå CRITIQUE: Aucun lien externe trouv√©!${NC}"
fi

# V√©rification fichiers SEO
if [ -f "$LOCAL_DIST/robots.txt" ]; then
    echo -e "${GREEN}‚úÖ robots.txt pr√©sent${NC}"
    if grep -q "melissacolin.ai" "$LOCAL_DIST/robots.txt"; then
        echo -e "${GREEN}   ‚úÖ Domaine correct dans robots.txt${NC}"
    else
        echo -e "${YELLOW}   ‚ö†Ô∏è  Domaine √† v√©rifier dans robots.txt${NC}"
    fi
else
    echo -e "${RED}‚ùå robots.txt manquant${NC}"
fi

if [ -f "$LOCAL_DIST/sitemap.xml" ]; then
    echo -e "${GREEN}‚úÖ sitemap.xml pr√©sent${NC}"
    url_count=$(grep -c '<url>' "$LOCAL_DIST/sitemap.xml" 2>/dev/null || echo "0")
    echo -e "   üìù URLs dans sitemap: $url_count"
else
    echo -e "${RED}‚ùå sitemap.xml manquant${NC}"
fi

echo ""
echo -e "${BLUE}üåê 2. Test de connectivit√© du site en ligne${NC}"

# Test de base de connectivit√©
if command -v curl >/dev/null 2>&1; then
    echo "üîó Test de connectivit√©..."
    
    # Test HTTP status
    status_code=$(curl -s -o /dev/null -w "%{http_code}" "$SITE_URL" --max-time 10)
    if [ "$status_code" = "200" ]; then
        echo -e "${GREEN}‚úÖ Site accessible (HTTP 200)${NC}"
    else
        echo -e "${RED}‚ùå Site non accessible (HTTP $status_code)${NC}"
    fi
    
    # Test redirection www
    www_status=$(curl -s -o /dev/null -w "%{http_code}" "https://www.melissacolin.ai" --max-time 10)
    if [ "$www_status" = "301" ] || [ "$www_status" = "200" ]; then
        echo -e "${GREEN}‚úÖ Redirection www configur√©e (HTTP $www_status)${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Redirection www √† v√©rifier (HTTP $www_status)${NC}"
    fi
    
    # Test du contenu H1 en ligne
    echo "üîç V√©rification du H1 en ligne..."
    online_content=$(curl -s "$SITE_URL" --max-time 10)
    if echo "$online_content" | grep -q "<h1>"; then
        echo -e "${GREEN}‚úÖ H1 d√©tect√© en ligne${NC}"
        h1_online=$(echo "$online_content" | grep -o '<h1>[^<]*</h1>' | head -1)
        echo -e "   üìù H1 en ligne: $h1_online"
    else
        echo -e "${RED}‚ùå H1 non d√©tect√© en ligne${NC}"
    fi
    
    # Test des liens externes en ligne
    if echo "$online_content" | grep -q "enseirb-matmeca.fr"; then
        echo -e "${GREEN}‚úÖ Liens externes d√©tect√©s en ligne${NC}"
    else
        echo -e "${RED}‚ùå Liens externes non d√©tect√©s en ligne${NC}"
    fi
    
else
    echo -e "${YELLOW}‚ö†Ô∏è  curl non disponible - impossible de tester le site en ligne${NC}"
fi

echo ""
echo -e "${BLUE}üìä 3. R√©sum√© et recommandations${NC}"
echo "=================================="

# Score SEO basique
score=0
total=10

[ "$h1_count" -gt 0 ] && score=$((score + 2))
[ "$h2_count" -gt 0 ] && score=$((score + 1))
[ "$external_links" -gt 0 ] && score=$((score + 2))
[ "$internal_links" -gt 5 ] && score=$((score + 1))
[ -f "$LOCAL_DIST/robots.txt" ] && score=$((score + 1))
[ -f "$LOCAL_DIST/sitemap.xml" ] && score=$((score + 1))
grep -q 'meta name="description"' "$LOCAL_DIST/index.html" && score=$((score + 1))
[ "$status_code" = "200" ] && score=$((score + 1))

percentage=$((score * 100 / total))

echo -e "üéØ Score SEO: ${score}/${total} (${percentage}%)"

if [ $percentage -ge 80 ]; then
    echo -e "${GREEN}üéâ Excellent! Votre site est bien optimis√© pour le SEO${NC}"
elif [ $percentage -ge 60 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Bon, mais des am√©liorations sont possibles${NC}"
else
    echo -e "${RED}‚ùå Attention! Des probl√®mes SEO critiques d√©tect√©s${NC}"
fi

echo ""
echo "üîß Actions recommand√©es:"
[ "$h1_count" -eq 0 ] && echo -e "${RED}- URGENT: Ajouter un H1 heading${NC}"
[ "$external_links" -eq 0 ] && echo -e "${RED}- URGENT: Ajouter des liens externes${NC}"
[ "$internal_links" -lt 5 ] && echo -e "${YELLOW}- Am√©liorer la navigation interne${NC}"
[ ! -f "$LOCAL_DIST/robots.txt" ] && echo -e "${YELLOW}- Cr√©er un fichier robots.txt${NC}"
[ "$status_code" != "200" ] && echo -e "${RED}- URGENT: V√©rifier la configuration Hostinger${NC}"

echo ""
echo "üåê URLs √† tester manuellement:"
echo "- Page principale: $SITE_URL"
echo "- Google PageSpeed: https://pagespeed.web.dev/analysis?url=${SITE_URL}"
echo "- Google Rich Results: https://search.google.com/test/rich-results?url=${SITE_URL}"
echo "- W3C Validator: https://validator.w3.org/nu/?doc=${SITE_URL}"

echo ""
echo -e "${GREEN}‚úÖ Validation termin√©e!${NC}"
