# Configuration SEO et Performance avancée pour Mélissa Colin Portfolio

# Définir les types MIME corrects
<IfModule mod_mime.c>
  AddType application/javascript .js .mjs .jsx
  AddType text/css .css
  AddType application/json .json
  AddType text/html .html .htm
  AddType image/svg+xml .svg
  AddType image/webp .webp
  AddType image/avif .avif
  AddType application/manifest+json .webmanifest
</IfModule>

# Cache des assets statiques pour 1 an
<filesMatch "\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif|pdf)$">
  ExpiresActive On
  ExpiresDefault "access plus 1 year"
  Header set Cache-Control "public, immutable"
  # Preload hint pour les ressources critiques
  Header add Link "</assets/images/profile-image.jpg>; rel=preload; as=image"
  Header add Link "</assets/images/favicon.ico>; rel=preload; as=image"
</filesMatch>

# Cache du HTML pour 1 heure avec revalidation
<filesMatch "\.(html|htm)$">
  ExpiresActive On
  ExpiresDefault "access plus 1 hour"
  Header set Cache-Control "public, must-revalidate"
  # SEO headers pour le HTML
  Header set X-Robots-Tag "index, follow, max-image-preview:large"
</filesMatch>

# Cache pour les manifests et service workers
<filesMatch "\.(webmanifest|json)$">
  ExpiresActive On
  ExpiresDefault "access plus 1 week"
  Header set Cache-Control "public"
</filesMatch>

# Activer la compression avancée
<IfModule mod_deflate.c>
  # Compression pour tous les types de contenu texte
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css 
  AddOutputFilterByType DEFLATE application/javascript application/json
  AddOutputFilterByType DEFLATE application/xml application/xhtml+xml
  AddOutputFilterByType DEFLATE application/rss+xml application/atom+xml
  AddOutputFilterByType DEFLATE application/x-javascript text/javascript
  AddOutputFilterByType DEFLATE image/svg+xml
  AddOutputFilterByType DEFLATE application/manifest+json
  
  # Compression pour les formats de police
  AddOutputFilterByType DEFLATE application/font-woff application/font-woff2
  AddOutputFilterByType DEFLATE application/vnd.ms-fontobject font/opentype
</IfModule>

# Headers de performance et sécurité avancés
<IfModule mod_headers.c>
  # Sécurité renforcée
  Header always set X-Content-Type-Options nosniff
  Header always set X-Frame-Options DENY
  Header always set X-XSS-Protection "1; mode=block"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
  Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
  
  # Performance hints pour les navigateurs
  Header add Link "</assets/fonts/>; rel=preconnect; crossorigin"
  Header add Link "<https://www.googletagmanager.com>; rel=preconnect"
  Header add Link "<https://fonts.googleapis.com>; rel=preconnect"
  
  # Cache busting pour les assets avec version
  <FilesMatch "\.(js|css)$">
    Header set Cache-Control "public, max-age=31536000, immutable"
    Header unset ETag
    FileETag None
  </FilesMatch>
  
  # Headers SEO spécifiques pour les images
  <FilesMatch "\.(jpg|jpeg|png|gif|webp|avif|svg)$">
    Header set X-Content-Type-Options nosniff
    Header set Cache-Control "public, max-age=31536000, immutable"
    # Aide les moteurs de recherche à indexer les images
    Header set X-Robots-Tag "all"
  </FilesMatch>
</IfModule>

# Optimisations pour les images - servir WebP/AVIF quand supporté
<IfModule mod_rewrite.c>
  RewriteEngine On
  
  # Servir WebP si disponible et supporté par le navigateur
  RewriteCond %{HTTP_ACCEPT} image/webp
  RewriteCond %{REQUEST_FILENAME} \.(jpe?g|png)$
  RewriteCond %{REQUEST_FILENAME}\.webp -f
  RewriteRule (.+)\.(jpe?g|png)$ $1.$2.webp [T=image/webp,E=accept:1,L]
  
  # Servir AVIF si disponible et supporté par le navigateur  
  RewriteCond %{HTTP_ACCEPT} image/avif
  RewriteCond %{REQUEST_FILENAME} \.(jpe?g|png)$
  RewriteCond %{REQUEST_FILENAME}\.avif -f
  RewriteRule (.+)\.(jpe?g|png)$ $1.$2.avif [T=image/avif,E=accept:1,L]
</IfModule>

# Configuration pour SPA (Single Page Application) avec gestion SEO
<IfModule mod_rewrite.c>
  RewriteEngine On
  
  # Gestion des URLs canoniques - redirection des trailing slashes
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_URI} ^(.+)/$
  RewriteRule ^(.+)/$ /$1 [R=301,L]
  
  # Routage SPA - toutes les routes vers index.html
  RewriteBase /
  RewriteRule ^index\.html$ - [L]
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_FILENAME} !-l
  # Préserver les paramètres de langue pour le SEO
  RewriteRule . /index.html [L,QSA]
</IfModule>

# Configuration des erreurs personnalisées
ErrorDocument 404 /index.html

# Blocage des fichiers sensibles pour la sécurité
<Files ~ "^\.">
  Order allow,deny
  Deny from all
</Files>

# Protection des fichiers de configuration
<FilesMatch "\.(env|json|yml|yaml|config)$">
  Order allow,deny
  Deny from all
</FilesMatch>

# Optimisation de la bande passante - éviter les requêtes inutiles
<IfModule mod_alias.c>
  # Bloquer les tentatives d'accès aux fichiers système
  RedirectMatch 404 /\.git
  RedirectMatch 404 /\.env
  RedirectMatch 404 /node_modules
</IfModule>
</IfModule>