#!/bin/bash

# Script d'audit SEO pour portfolio M√©lissa Colin
# Ce script v√©rifie les √©l√©ments SEO essentiels

echo "üîç Audit SEO - Portfolio M√©lissa Colin"
echo "======================================"

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# URL du site √† tester
SITE_URL="https://melissacolin.ai"
DIST_DIR="./my-portfolio-dist"

echo ""
echo "üìã V√©rification des fichiers essentiels..."

# V√©rifier la pr√©sence des fichiers essentiels
check_file() {
    local file=$1
    local description=$2
    
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úì${NC} $description trouv√©: $file"
    else
        echo -e "${RED}‚úó${NC} $description manquant: $file"
    fi
}

check_file "$DIST_DIR/robots.txt" "Robots.txt"
check_file "$DIST_DIR/sitemap.xml" "Sitemap XML"
check_file "$DIST_DIR/manifest.json" "Web App Manifest"
check_file "$DIST_DIR/index.html" "Page d'accueil"

echo ""
echo "üîé V√©rification du contenu HTML..."

if [ -f "$DIST_DIR/index.html" ]; then
    # V√©rifier la meta description
    if grep -q 'meta name="description"' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} Meta description pr√©sente"
        # Afficher la meta description
        meta_desc=$(grep -o 'meta name="description" content="[^"]*"' "$DIST_DIR/index.html" | sed 's/meta name="description" content="//g' | sed 's/"$//g')
        echo "  üìù Description: ${meta_desc:0:100}..."
    else
        echo -e "${RED}‚úó${NC} Meta description manquante"
    fi
    
    # V√©rifier le titre
    if grep -q '<title>' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} Titre pr√©sent"
        title=$(grep -o '<title>[^<]*</title>' "$DIST_DIR/index.html" | sed 's/<title>//g' | sed 's/<\/title>//g')
        echo "  üìù Titre: $title"
    else
        echo -e "${RED}‚úó${NC} Titre manquant"
    fi
    
    # V√©rifier les meta robots
    if grep -q 'meta name="robots"' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} Meta robots pr√©sent"
    else
        echo -e "${YELLOW}‚ö†${NC} Meta robots manquant (recommand√©)"
    fi
    
    # V√©rifier canonical
    if grep -q 'rel="canonical"' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} URL canonique pr√©sente"
    else
        echo -e "${RED}‚úó${NC} URL canonique manquante"
    fi
    
    # V√©rifier Open Graph
    if grep -q 'property="og:' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} Balises Open Graph pr√©sentes"
    else
        echo -e "${RED}‚úó${NC} Balises Open Graph manquantes"
    fi
    
    # V√©rifier Twitter Card
    if grep -q 'name="twitter:' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} Twitter Cards pr√©sentes"
    else
        echo -e "${YELLOW}‚ö†${NC} Twitter Cards manquantes (recommand√©)"
    fi
    
    # V√©rifier Schema.org
    if grep -q 'application/ld+json' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} Donn√©es structur√©es Schema.org pr√©sentes"
    else
        echo -e "${YELLOW}‚ö†${NC} Donn√©es structur√©es manquantes (recommand√©)"
    fi
    
    # V√©rifier hreflang
    if grep -q 'hreflang=' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úì${NC} Attributs hreflang pr√©sents"
    else
        echo -e "${YELLOW}‚ö†${NC} Attributs hreflang manquants (recommand√© pour site multilingue)"
    fi
fi

echo ""
echo "üåê V√©rification du sitemap..."

if [ -f "$DIST_DIR/sitemap.xml" ]; then
    # Compter le nombre d'URLs dans le sitemap
    url_count=$(grep -c '<url>' "$DIST_DIR/sitemap.xml" 2>/dev/null || echo "0")
    echo -e "${GREEN}‚úì${NC} Sitemap contient $url_count URLs"
    
    # V√©rifier que le sitemap contient le bon domaine
    if grep -q "https://melissacolin.ai" "$DIST_DIR/sitemap.xml"; then
        echo -e "${GREEN}‚úì${NC} Sitemap utilise le bon domaine (melissacolin.ai)"
    else
        echo -e "${RED}‚úó${NC} Sitemap utilise un mauvais domaine"
    fi
fi

echo ""
echo "ü§ñ V√©rification du robots.txt..."

if [ -f "$DIST_DIR/robots.txt" ]; then
    if grep -q "Sitemap:" "$DIST_DIR/robots.txt"; then
        echo -e "${GREEN}‚úì${NC} Robots.txt contient une r√©f√©rence au sitemap"
    else
        echo -e "${YELLOW}‚ö†${NC} Robots.txt ne r√©f√©rence pas le sitemap"
    fi
    
    if grep -q "Allow:" "$DIST_DIR/robots.txt"; then
        echo -e "${GREEN}‚úì${NC} Robots.txt contient des directives Allow"
    fi
fi

echo ""
echo "üì± V√©rification du Web App Manifest..."

if [ -f "$DIST_DIR/manifest.json" ]; then
    echo -e "${GREEN}‚úì${NC} Manifest.json pr√©sent"
    
    # V√©rifier les champs essentiels du manifest
    if grep -q '"name"' "$DIST_DIR/manifest.json"; then
        echo -e "${GREEN}‚úì${NC} Nom de l'application d√©fini"
    fi
    
    if grep -q '"start_url"' "$DIST_DIR/manifest.json"; then
        echo -e "${GREEN}‚úì${NC} URL de d√©marrage d√©finie"
    fi
fi

echo ""
echo "üéØ Recommandations SEO:"
echo "======================"

echo "1. üìä Ajoutez Google Search Console pour monitorer votre indexation"
echo "2. üîó Cr√©ez des backlinks de qualit√© (profils acad√©miques, projets GitHub)"
echo "3. üìù Ajoutez r√©guli√®rement du contenu (blog, projets)"
echo "4. üèÉ Optimisez la vitesse de chargement"
echo "5. üì± V√©rifiez la responsiveness mobile"
echo "6. üåê Soumettez votre sitemap √† Google Search Console"
echo "7. üîç Utilisez des mots-cl√©s pertinents pour votre profil √©tudiant IA"

echo ""
echo "üöÄ Pour am√©liorer votre r√©f√©rencement:"
echo "- Cr√©ez un profil Google Scholar si pas d√©j√† fait"
echo "- Ajoutez votre portfolio √† votre profil LinkedIn"
echo "- Partagez vos projets sur GitHub avec de bonnes descriptions"
echo "- Participez √† des communaut√©s IA (forums, Discord, Reddit)"
echo "- Cr√©ez du contenu technique sur votre blog"

echo ""
echo "‚úÖ Audit termin√©!"
